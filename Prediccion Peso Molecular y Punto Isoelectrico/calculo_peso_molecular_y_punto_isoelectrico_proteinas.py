# -*- coding: utf-8 -*-
"""Calculo Peso Molecular y Punto Isoelectrico - Proteinas

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tMzFbs_LucK5TbVLI-iLkileXL7Rcok2
"""

!pip install biopython

from Bio.SeqUtils import molecular_weight, IsoelectricPoint
from Bio.Seq import Seq
from Bio.SeqUtils.ProtParam import ProteinAnalysis
from Bio import SeqIO

def CalcularPesoMolecular(secuencia):
    peso_molecular = molecular_weight(secuencia, seq_type="protein")
    return peso_molecular

def CalcularPuntoIsoelectrico(secuencia):
    prot_analysis = ProteinAnalysis(str(secuencia))
    pI = prot_analysis.isoelectric_point()
    return pI

#Para un archivo multifasta de proteínas

def PesoMolecular_PI_Multifasta(input_fasta, output_tsv):
  '''
  Esta función procesa un archivo multifasta determinando el peso molecular y pI de las secuencias proteicas y retorna un .tsv con dichos valores.
  '''
  with open(input_fasta, 'r') as fasta_file, open(output_tsv, 'w') as output_tsv:
    output_tsv.write("protein_id\tpeso_molecular\tPI\n")
    for record in SeqIO.parse(fasta_file, "fasta"):
      protein_id = record.id  # El identificador de la proteína (header)
      secuencia_proteina = record.seq  # La secuencia de la proteína

      # Calcular el peso molecular y el punto isoelectrico
      peso_molecular = CalcularPesoMolecular(secuencia_proteina)
      pI = CalcularPuntoIsoelectrico(secuencia_proteina)

      # Escribir los resultados en el archivo .tsv
      output_tsv.write(f"{protein_id}\t{peso_molecular}\t{pI}\n")

# Ejemplo de uso
input_fasta = ""  # El archivo FASTA con las secuencias
output_tsv = ""    # El archivo de salida en formato TSV

PesoMolecular_PI_Multifasta(input_fasta, output_tsv)

print(f"Resultados guardados en {output_tsv}")

#Para una secuencia en particular

Secuencia = ""

PM = CalcularPesoMolecular(Secuencia)
PI = CalcularPuntoIsoelectrico(Secuencia)

print(f"Peso Molecular: {PM}")
print(f"Punto Isoelectrico: {PI}")